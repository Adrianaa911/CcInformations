              !!!---Objects---!!!!

Objects can be assigned to variables just like any JavaScript type. We use curly braces, {}, to designate an object literal:

let spaceship = {}; // spaceship is an empty object

We fill an object with unordered data. This data is organized into key-value pairs. A key is like a variable name that points to a location in memory that holds a value.
A key’s value can be of any data type in the language including functions or other objects.
We make a key-value pair by writing the key’s name, or identifier, followed by a colon and then the value. We separate each key-value pair in an object literal with a comma (,).
Keys are strings, but when we have a key that does not have any special characters in it, JavaScript allows us to omit the quotation marks:


// An object literal with two key-value pairs
let spaceship = {
  'Fuel Type': 'diesel',
  color: 'silver'
};

The spaceship object has two properties Fuel Type and color. 'Fuel Type' has quotation marks because it contains a space character.

   -- Accessing Properties -- !!

There are two ways we can access an object’s property. Let’s explore the first way— dot notation, ..
You’ve used dot notation to access the properties and methods of built-in objects and data instances:

'hello'.length; // Returns 5

With property dot notation, we write the object’s name, followed by the dot operator and then the property name (key):

let spaceship = {
  homePlanet: 'Earth',
  color: 'silver'
};
spaceship.homePlanet; // Returns 'Earth',
spaceship.color; // Returns 'silver',


If we try to access a property that does not exist on that object, undefined will be returned.
spaceship.favoriteIcecream; // Returns undefined

Tasks:

let spaceship = {
  homePlanet: 'Earth',
  color: 'silver',
  'Fuel Type': 'Turbo Fuel',
  numCrew: 5,
  flightPath: ['Venus', 'Mars', 'Saturn']
};

1.Let’s use the dot operator to access the value of numCrew from the spaceship object in the code editor. 

let crewCount = spaceship.numCrew;
Create a variable crewCount and assign the spaceship‘s numCrew property to it.

2. Again using the dot operator, create a variable planetArray and assign the spaceship‘s flightPath property to it.

let planetArray = spaceship.flightPath;

